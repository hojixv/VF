script_key="RYswMRqxXaExHPxetgcMZmpYEZgTqrhe";
getgenv().script_key = script_key;

getgenv().Mode = {
    Mode = "W", -- dont touch
}

getgenv().Intro = {
    IntroBlur = true,
}

getgenv().Watermark = {
    Enable = false,
}

getgenv().ConsoleCleaner = {
    Cleaner = {
        Enabled = true,
        KeyBind = "b",
        Delay = 0.01,
        AutoOs = false, -- Clears console on injection
    }
}

getgenv().Universal = {
    Detections = {
        UniversalKeyBind = "G",
        Universal = false,
        Axis = false,
        AntiAim = false,
        Desync = false,
        Movement = false,
        Sky = false,
        UnderGround = false,
        Model = false,
    }
}

getgenv().hojixv = {
    Silent = {
        Enabled = true,
        Part = "HumanoidRootPart",
        UseAirPart = false,
        AirPart = "Head",
        ClosestPart = false,
        CenterPart = false,
        ClosetPoint = false,
        
        WhitelistedParts = {"HumanoidRootPart"},

        AutoPrediction = 1, -- type of math
        UseAutoPrediction = false,
        MultiplyAutoPrediction = false,
        Multiply = 2, -- Multipliers
        
        UseAntiCurve = false,
        AntiCurveValue = 1,
        UseAxis = false,
        AxisY = 1,
        AxisX = 1,

        AntiGroundShot = false,
        UseAntiGroundShot = false,
        AntiGroundShotValue = 5, -- Up to 10
        
        Prediction = 0.1255,
        HitChance = 100,
        UseToggleKey = true,
        ToggleKey = "p",

        UseCustomPrediction = true,
        CustomPrediction = {
            X = 0.125,
            Y = 0.1255,
            Z = 0.1225
        },

        UseFactors = false,
        Factors = 1, -- 1, 2, 3
        FactorsX = 1, -- X Pred Factor
        FactorsY = 1, -- Y Pred Factor
        FactorsZ = 1, -- Z Pred Factor

        UseTracer = false,
        Tracer = true,
        TracerColor = Color3.fromRGB(0, 0, 255),
        FreeForAllTracer = true, -- may cause lots of lag

        SnapLines = false,  -- only works on electron

        UseCustomAngles = false,
        CustomAngle = "Pixel",

        UseAirShotHitChance = false,
        AirShotHitChance = 100,

        KillPoint = "KillCheck",
    },
    Dynamic = {
        LeftRange = 10,
        RightRange = 10,
        UniversalRange = 1,
        Y_Range = 1,
        X_Range = 1,
        Z_Range = 1,
    },
    CustomSilentSettings = {
        Debug = false,
        UseCustomInterVals = false,
    },
    SilentFOV = {
        Visible = true,
        Filled = false,
        Radius = 500,
        Transparency = 1,
        Thickness = 1,
        Color = Color3.fromRGB(0, 0, 255),
    },
    Visualize = {
        Enable = false,
    },
    Type = {
        VisibleIfTarget = false,
        FoVScaleFactors = false,
    },
    SilentChecks = {
        VisibleCheck = false,
        CrewCheck = false,
        FriendCheck = false,
        TeamCheck = false,
        VehicleCheck = false,
        WallCheck = false,
        CheckIf_KO = true,
        UsingFactorCheck = false,
    },
    Scaling = {
        UseScaling = false,
        Transform = "PlayerPostion",
    },
    Properties = {
        UseRangeCoefficient = false,
        RangeCoefficient = 1,
        PredictClose = false,
        UseDetection = false,
        UseCursorHitPart = false,
        Intervals = 0.122,
        Precision = 2,
    },
    Conditions = {
        Formula = "S*",
        BasePart = "", -- HumanoidRootPart
        AutoDetection = false,
        UseAutoDetection = true,
        ManualDetection = 50,
    },
    Resolver = {
        Enabled = true,
        For = "Silent",
        Type = "Delta", -- MoveDirection
        Threshold = 85,
        Tuning = 0.2,

        UseCustomResolver = false,
        CustomResolver = false,
        ResolverX = 0.1,
        ResolverY = 0.1,
        ResolverZ = 0.1,
    },
    Safety = {
        LegitMode = false, -- blatant, legit, semilegit, semiblatant
        Override = false,
        OverrideAxis = false,
        Y = 1,
        X = 1,
        Z = 1,
        
        UseCustomNoGroundShots = false,
        NoGroundShots = false,
        AmountOfNoGroundShots = 10, -- Max is 10

        Use3dAngles = false,
        Angles = "Angles",
        AnglePower = 1, -- Power For Angle Basically

        UsePredictionPoints = false,
        PredictionPoints = 5,
        PointAdjustment = 0.1,

        UseAirPoints = false,
        AirPoints = 1,

        CornerScale = nil,
        UseCornerFactors = false,
        ScaleFactors = 1,

        UseVersionCheck = "Safe",
        UseKeyBinds = false,
        UseSafeFov = false,

        VisibleTarget = true,
        NearestCursor = false,
    },
    Global = {
        UseChecks = true,
        UseSafeMode = false,
        FieldOfView = "Sticky",
        SelfDetection = false,
        UseGlobalAxis = false,
    },
    UnSafe = {
        AllowArgs = false,
        AllowRead = true,
        AllowHwidExecution = false,
        AllowChange = false,
    },
}


getgenv().hojixvreborn = {
    KeyType = "E",
    Type = "Solara",
    Key = Enum.KeyCode.C,
    PredictionY = 0.126,
    Visualize = false,
    Point = false,
    PredictionX = 0.1255,
    Parts = "Head",
    Smoothing_Value = 0.01,

    NearestCursorHitpart = false,
    Type_Mode = 1,

    AirPart = "Head",
    UseAirPart = false,
    BoundAdjustment = -0.17,
    CheckIfJumped = false,
    ShakeValue = 0.088,

    UseCustomShake = false,
    ShakeY = 0.1,
    ShakeX = 0.1,
    ShakeZ = 0.1,

    UseEasingStyle = false,
    EasingStyleOut = "Elastic",
    EasingStyleIn = "Linear",
    UniversalY = false,

    AutoPrediction = 1, -- type of math
    UseAutoPrediction = false,
    MultiplyAutoPrediction = false,
    Multiply = 2,

    UseCustomResolver1 = false, -- if you don't use this, use normal resolver
    CustomResolver1 = false,
    Resolver1X = 0.1,
    Resolver1Y = 0.1,
    Resolver1Z = 0.1,

    UseTracer = false, -- only works on electron
    Tracer = true,
    TracerColor = Color3.fromRGB(0, 0, 255),
    FreeForAllTracer = true, -- may cause lots of lag

    UseStatic = false,
    StaticY = 1.2,
    StaticX = 1.2,
    StaticZ = 1.2,
}


getgenv().AirPrediction = {
    AirPrediction = false,
    AirPredictionX = 0.1,
    AirPredictionY = 0.1,
    AirPredictionZ = 0.1,
}


getgenv().CustomGameAxis = {
    UseGameAxis = false,
    AxisValue = 1,
    UseX = false,
    UseY = false,
    UseZ = false,
}


getgenv().CustomSmoothing = {
    UseCustomSmoothing = false,
    X = 0.2,
    Y = 0.2,
    Z = 0.2,
}


getgenv().AirSmoothing = {
    UseAirSmoothing = false,
    X = 0.2,
    Y = 0.2,
    Z = 0.2,
}


getgenv().CustomShakeAir = {
    Enabled = false,
    AirX = 1,
    AirY = 1,
    AirZ = 1,
}


getgenv().Offset_Type = {
    X = 0.11,
    Y = 0.11,
    Z = 0.11,
    Landing = false,
    Jumping = false,
    UseVectors = false,
    OffsetKillType = Vector2.new(0, 100),
}


getgenv().Global_Check = {
    UseGlobal = false,
    Ko_Check = false,
    WallCheck = false,
    VisibleCheck = false,
    KillCheck = false,
    StaticChecks = false,
    UseDetection = false,
    VehicleCheck = false,
    CrewCheck = false,
    TeamCheck = false,
}


getgenv().ChecksV2 = {
    KillCheckPoint = true,
    Unlocked = true,
    KoCheck = true,
    Resolver = Enum.KeyCode.G,
    UniversalResolver = false,
    CheckPoints = false,
    Visualize_Points = false
}


getgenv().Spin = {
    Enabled = true,
    RotationSpeed = 100,
    Keybind = Enum.KeyCode.V,
    Multiple = false,
    UseDynamicSpeedSpin = false,
    DynamicSpeedSpin = 0,
    PiMultiplier = 2,
}


getgenv().DottedFOV = {
    ShowDots = true,
    Rainbow = true,
    DotSize = 3,
    Radius = 200,
    Color = Color3.fromRGB(80, 50, 168),
}


getgenv().hojixv3 = {
    Settings = {
        cframespeedtoggle = true,
        KeyBind = "x",
        speedvalue = 1,
        DynamicSpeed = 1,
        UseDynamicSpeed = false,
    }
}


getgenv().BruhImGeeked = {
    Esp = {
        Enabled = false,
        UseEspKeybind = true,
        UseTransparency = false,
        EspKey = "l",
        HoldMode = false,

        Name = {
            Enabled = false,
            OutLine = false,
            Color = Color3.fromRGB(255, 255, 255),
        },

        NameTransparency = 1,
        UseOuter1 = false,
        OuterName = 0,
        OuterNameTransparency = 0,

        Box = {
            Enabled = false,
            OutLine = false,
            Color = Color3.fromRGB(255, 255, 255),
        },

        BoxTransparency = 1,
        BoundBox = false,
        UseBoundBox = false,
        BoundBoxTransparency = 1,

        HealthBar = {
            Enabled = false,
            OutLine = false,
            Color = Color3.fromRGB(0, 255, 0),
        },

        HealthTransparencyText = 1,
        HealthText = {
            Enabled = true,
            OutLine = false,
            Color = Color3.fromRGB(0, 255, 0),
        },

        HealthTransparency = 1,

        Distance = {
            Enabled = false,
            OutLine = false,
            Color = Color3.fromRGB(255, 255, 255),
        },

        DistanceTransparency = 1,
        UseOuter2 = false,
        OuterDistance = 0,
        OuterDistanceTransparency = 0,
    }
}


getgenv().hojixvvv = {
    Texture = {
        Enabled = false,
        Material = Enum.Material.Brick,  -- Assuming Material is an Enum
        Color = Color3.fromRGB(255, 255, 255),
    }
}

getgenv().Macro = {
    Enabled = true,
    Keybind = "n",
    Speed = 1.5,
    Default = false,
    Hold = false,
    Toggle = true,
    XSpeed = false,
    XSpeed1 = 1,
    Xspeed2 = 2,
    Version = "FirstPerson" -- // FirstPerson, ThirdPerson
}


getgenv().BindTrashTalk = {
    Enabled = true,
    Delay = 1,
    UseTags = false,
    FilterForNoBan = true, -- Always use plzplzplzpzlzpl
    keybind = "y",
    messages = {
        "I love Bind",
        "Wow Bind just sonned u",
        "Bind > Stellar",
        "Wow bind js sonned u",
        "Bind.lua is too good for u",
        "Uh i heard this bind thing solos Shhhh",
        "U Need Bind.lua",
    }
}

loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/c7db0f79b5a50c8b71454cd33742b69b.lua"))()
